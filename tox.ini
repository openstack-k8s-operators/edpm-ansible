[tox]
minversion = 4.0.0
envlist = docs,linters
ignore_base_python_conflict = True

[testenv]
basepython = python3
usedevelop = True
passenv = *
setenv =
   ANSIBLE_SKIP_CONFLICT_CHECK=1
   ANSIBLE_ACTION_PLUGINS={toxinidir}/edpm_ansible/roles.galaxy/config_template/action:{toxinidir}/edpm_ansible/ansible_plugins/action
   ANSIBLE_CALLBACK_PLUGINS={toxinidir}/edpm_ansible/ansible_plugins/callback
   ANSIBLE_FILTER_PLUGINS={toxinidir}/edpm_ansible/ansible_plugins/filter
   ANSIBLE_LIBRARY={toxinidir}/edpm_ansible/roles.galaxy/config_template/library:{toxinidir}/edpm_ansible/ansible_plugins/modules
   ANSIBLE_MODULE_UTILS={toxinidir}/edpm_ansible/ansible_plugins/module_utils
   ANSIBLE_ROLES_PATH={toxinidir}/edpm_ansible/roles.galaxy:{toxinidir}/edpm_ansible/roles
   ANSIBLE_INVENTORY={toxinidir}/tests/hosts.ini
   ANSIBLE_NOCOWS=1
   ANSIBLE_RETRY_FILES_ENABLED=0
   ANSIBLE_STDOUT_CALLBACK=debug
   ANSIBLE_LOG_PATH={envlogdir}/ansible-execution.log
   VIRTUAL_ENV={envdir}
   LC_ALL=en_US.UTF-8
   # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
   # paramiko CryptographyDeprecationWarning: https://github.com/ansible/ansible/issues/52598
   PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command,ignore::UserWarning
   PIP_DISABLE_PIP_VERSION_CHECK=1
sitepackages = True
deps =
   -r {toxinidir}/requirements.txt
   -r {toxinidir}/test-requirements.txt
   -c {env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed}
commands =
# ansible-core 2.13.6 installed with py38 does not provide a way to set
# timeout with ansible-galaxy command.
   ansible-galaxy install -fr {toxinidir}/requirements.yml
   stestr run {posargs}
allowlist_externals =
   bash
   tox
   true
   ansible-galaxy
   ansible-playbook

[testenv:linters]
skip_install = True
sitepackages = False
deps =
   pre-commit
   virtualenv
commands =
   bash -c "ANSIBLE_ROLES_PATH='{toxinidir}/edpm_ansible/roles.galaxy' \
            ansible-galaxy install -fr {toxinidir}/requirements.yml"
   python -m pre_commit run -a

[testenv:docs]
deps =
   -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed}
   -r {toxinidir}/docs/requirements.txt
commands=
   ansible-galaxy install --timeout 300 -fr {toxinidir}/requirements.yml
   doc8 docs
   sphinx-build -a -E -W -d docs/build/doctrees --keep-going -b html docs/source docs/build/html -T

[doc8]
# Settings for doc8:
extensions = .rst
ignore = D001

[testenv:role-addition]
deps =
   pre-commit
   virtualenv
   -r {toxinidir}/molecule-requirements.txt
   -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
commands =
   ansible-galaxy install --timeout 300 -fr {toxinidir}/requirements.yml
   ansible-playbook -i localhost, -c local zuul.d/playbooks/run-role-addition.yml -e edpm_src={toxinidir}
   bash -c "if podman ps 2> /dev/null; then  \
               cd {toxinidir}/edpm_ansible/roles/skeleton_test;  \
               molecule --base-config {toxinidir}/.config/molecule/config_podman.yml test --all;  \
            else  \
               echo -e '\n\nNo molecule tests have been executed\n';  \
            fi"
   {[testenv:linters]commands}
