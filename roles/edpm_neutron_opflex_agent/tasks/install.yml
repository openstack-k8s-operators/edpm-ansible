---
# Copyright 2024 Cisco Systems Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
- name: Gather user fact
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!min"
      - "user"
  when:
    - ansible_user is undefined
    
- name: Create ciscoaci-neutron-opflex-agent directories
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    setype: "container_file_t"
    state: directory
    owner: "{{ item.owner | default(ansible_user) | default(ansible_user_id) }}"
    group: "{{ item.group | default(ansible_user) | default(ansible_user_id) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - {'path': "{{ edpm_cisco_neutron_opflex_agent_conf_dir }}", "mode": "0750"}
    - {'path': "{{ edpm_cisco_neutron_opflex_agent_config_dir }}", "mode": "0750"}
    - {'path': "/var/lib/config-data/puppet-generated/opflex/", "mode": "0750"}
    - {'path': "/var/lib/config-data/puppet-generated/opflex/etc", "mode": "0750"}
    - {'path': "/var/lib/config-data/puppet-generated/opflex/etc/opflex-agent-ovs", "mode": "0750"}
    - {'path': "/var/lib/config-data/puppet-generated/opflex/etc/opflex-agent-ovs/conf.d", "mode": "0750"}
    - {'path': "/etc/puppet", "mode": "0750"}
    - {'path': "/run/openvswitch", "mode": "0750", owner: "openvswitch", group: "hugetlbfs"}
    - {'path': "/var/lib/opflex/files", "mode": "0750"}
    - {'path': "/var/lib/opflex/sockets", "mode": "0750"}
    - {'path': "/var/run/openvswitch/", "mode": "0750", owner: "openvswitch", group: "hugetlbfs"}
    - {'path': "/var/lib/openstack/config/containers", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/droplog", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/endpoints", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/faults", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/ids", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/mcast", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/policy", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/restarts", "mode": "0750"}
    - {'path': "/var/lib/opflex-agent-ovs/services", "mode": "0750"}
    - {'path': "/var/log/containers/opflex", "mode": "0750"}
    - {'path': "/var/log/containers/neutron", "mode": "0750"}
    - { 'path': "/var/lib/opflex/files", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/endpoints", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/services", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/ids", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/mcast", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/droplog", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/faults", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/policy", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/outofband", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/sockets", 'setype': svirt_sandbox_file_t }
    - { 'path': "/var/lib/opflex/files/restarts", 'setype': svirt_sandbox_file_t }
  tags:
    - install
    - neutron
    
    
- name: Copy in cleanup script
  become: true
  ansible.builtin.copy:
    src: neutron-cleanup.txt
    dest: '/usr/libexec/neutron-cleanup'
    force: true
    mode: '0755'

- name: Copy in cleanup service
  become: true
  ansible.builtin.copy:
    src: neutron-cleanup.service
    dest: '/usr/lib/systemd/system/neutron-cleanup.service'
    force: true
    mode: '0644'

- name: Enabling the cleanup service
  become: true
  ansible.builtin.service:
    name: neutron-cleanup
    enabled: true