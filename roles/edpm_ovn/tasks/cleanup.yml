---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Cleanup hw-offload when no longer required
  ansible.builtin.shell: >
    ovs-vsctl remove open . other_config hw-offload
  register: cleanup_hw_offload
  changed_when: cleanup_hw_offload.rc == 0
  failed_when: cleanup_hw_offload.rc != 0
  when: not edpm_enable_hw_offload | bool

- name: Get OVN CMS Options from the local OVSDB
  ansible.builtin.shell: >
    ovs-vsctl get Open_vSwitch . external_ids:ovn-cms-options | sed 's/\"//g'
  register: cleanup_ovn_cms_options
  changed_when: false
  ignore_errors: true

- name: Cleanup enable-chassis-as-gw when chassis GW not enabled
  ansible.builtin.set_fact:
    cleanup_ovn_cms_options: "{{ cleanup_ovn_cms_options | regex_replace('enable-chassis-as-gw' ~ ',?', '') }}"
  when:
    - not edpm_enable_chassis_gw | bool
    - cleanup_ovn_cms_options.rc == 0

- name: Cleanup enable-chassis-as-extport-host when chassis extport not enabled
  ansible.builtin.set_fact:
    cleanup_ovn_cms_options: "{{ cleanup_ovn_cms_options | regex_replace('enable-chassis-as-extport-host' ~ ',?', '') }}"
  when:
    - not edpm_enable_chassis_extport | bool
    - cleanup_ovn_cms_options.rc == 0

- name: Cleanup availability-zones
  when:
    - edpm_ovn_availability_zones | length == 0
    - cleanup_ovn_cms_options.rc == 0
  block:
    - name: Filter out availability-zones from stdout when undefined
      ansible.builtin.set_fact:
        filtered_azs:
          stdout: "{{ cleanup_ovn_cms_options.stdout | regex_replace('availability-zones=[^,]*' ~ ',?', '') }}"

    - name: Update cleanup_ovn_cms_options with filtered azs
      ansible.builtin.set_fact:
        cleanup_ovn_cms_options: "{{ cleanup_ovn_cms_options | combine(filtered_azs | default({})) }}"

- name: Set updated OVN CMS Options to the local OVSDB
  ansible.builtin.shell: >
    ovs-vsctl set Open_vSwitch . external_ids:ovn-cms-options={{ cleanup_ovn_cms_options.stdout }}
  register: cleanup_ovn_cms_options_set
  changed_when: cleanup_ovn_cms_options_set.rc == 0
  failed_when: cleanup_ovn_cms_options_set.rc != 0
  when:
    - cleanup_ovn_cms_options.rc == 0
    - cleanup_ovn_cms_options.stdout != ""

- name: Clear OVN CMS Options if updated string is empty
  ansible.builtin.shell: >
    ovs-vsctl remove Open_vSwitch . external_ids ovn-cms-options
  register: cleanup_ovn_cms_options_remove
  changed_when: cleanup_ovn_cms_options_remove.rc == 0
  failed_when: cleanup_ovn_cms_options_remove.rc != 0
  when:
    - cleanup_ovn_cms_options.rc == 0
    - cleanup_ovn_cms_options.stdout == ""
