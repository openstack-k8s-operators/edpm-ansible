---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Get the command line args of the node
  ansible.builtin.slurp:
    src: "/proc/cmdline"
  register: cmdline_encoded

- name: Save the decoded cmdline
  ansible.builtin.set_fact:
    cmdline: "{{ cmdline_encoded['content'] | b64decode }}"

- name: TSX KernelArgs compute node reboot prevention
  when:
    - '"nova_libvirt" in groups'
  block:
    - name: Check if node has a nova.conf
      ansible.builtin.stat:
        path: "{{ edpm_nova_compute_config_dir }}/etc/nova/nova.conf"
      register: nova_conf_check

    - name: Enabling defer_reboot when TSX was added or appended
      when:
        - nova_conf_check.stat.exists
        - edpm_kernel_args is regex("^[\s]*tsx=[\S]+[\s]*$")
      block:
        - name: Warn operator about workload protection
          ansible.builtin.debug:
            msg: |
              Automated reboot for this node has been defered because it is already provisionned.
              Please schedule a manual reboot after this deployment is completed.

        - name: Setting workload protection fact
          ansible.builtin.set_fact:
            _workload_protection: true

- name: Handle hugepages
  ansible.builtin.include_tasks: hugepages.yml

- name: Check if the kernelargs entry is already present in the file
  ansible.builtin.replace:
    regexp: EDPM_KERNEL_ARGS
    dest: /etc/default/grub
    replace: ''
  check_mode: true
  register: grub_file_entry_check

# Kernel Args Configuration
- name: Kernel args configuration
  become: true
  when:
    - cmdline is defined
    - edpm_kernel_args|string
    - not (cmdline | regex_search( '^.*' + edpm_kernel_args + '.*$' | string ))
  block:
    # Leapp does not recognise grun entries starting other than GRUB
    # It results wrong formatting of entries in file /etc/default/grub
    # In order to fix it for FFU (queens to train), EDPM_KERNEL_ARGS has been renamed
    # Ensure the fresh deployment is also alinged with the same name
    - name: Delete older name EDPM_KERNEL_ARGS entries if present
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        regexp: 'EDPM_KERNEL_ARGS'
        state: absent

    - name: "Ensure the kernel args are present as GRUB_EDPM_KERNEL_ARGS: {{ edpm_kernel_args }}"
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        regexp: '^GRUB_EDPM_KERNEL_ARGS.*'
        insertafter: '^GRUB_CMDLINE_LINUX.*'
        line: 'GRUB_EDPM_KERNEL_ARGS=" {{ edpm_kernel_args }} "'

    - name: Add GRUB_EDPM_KERNEL_ARGS to the GRUB_CMDLINE_LINUX parameter
      ansible.builtin.lineinfile:
        dest: /etc/default/grub
        line: 'GRUB_CMDLINE_LINUX="${GRUB_CMDLINE_LINUX:+$GRUB_CMDLINE_LINUX }${GRUB_EDPM_KERNEL_ARGS}"'
        insertafter: '^GRUB_EDPM_KERNEL_ARGS.*'

    - name: Check grub config paths
      ansible.builtin.stat:
        path: "{{ item }}"
      register: grub_stat
      loop:
        - /boot/efi/EFI/BOOT
        - /boot/efi/EFI/redhat
        - /boot/efi/EFI/centos
        - /boot/efi/EFI/fedora

    - name: Check if grub2-mkconfig has --update-bls-cmdline option
      ansible.builtin.shell:
        cmd: grub2-mkconfig --help | grep '\-\-update-bls-cmdline'
      ignore_errors: true
      register: check_update_bls_cmdline
      changed_when: false

    - name: Generate grub config
      ansible.builtin.command: >-
        grub2-mkconfig -o /boot/grub2/grub.cfg
        {{ '--update-bls-cmdline'
        if check_update_bls_cmdline.rc == 0
        else '' }}
      register: _grub2_mkconfig
      changed_when: _grub2_mkconfig.rc == 0
      failed_when: _grub2_mkconfig.rc != 0

    - name: Generate EFI grub config
      ansible.builtin.command: >-
        grub2-mkconfig -o {{ item.stat.path }}/grub.cfg
        {{ '--update-bls-cmdline'
        if check_update_bls_cmdline.rc == 0
        else '' }}
      when: item.stat.exists | bool
      loop: "{{ grub_stat.results }}"
      register: _grub2_mkconfig_efi
      changed_when: _grub2_mkconfig_efi.rc == 0
      failed_when: _grub2_mkconfig_efi.rc != 0

    - name: Copy grubenv to EFI directory
      ansible.builtin.copy:
        remote_src: true
        src: /boot/grub2/grubenv
        dest: "{{ item.stat.path }}/grubenv"
        mode: "0644"
      when: item.stat.exists|bool
      loop: "{{ grub_stat.results }}"

    - name: Check for active tuned profile
      ansible.builtin.stat:
        path: "/etc/tuned/active_profile"
      register: tuned_active_profile

    - name: Ensure $tuned_params is restored to /boot/loader/entries files
      ansible.builtin.shell: >-
        tuned-adm profile $(cat /etc/tuned/active_profile)
      environment:
        PATH: "/bin:/usr/bin:/sbin:/usr/sbin"
      when:
        - tuned_active_profile.stat.exists
        - tuned_active_profile.stat.size | int > 0
      register: _tuned_adm
      changed_when: _tuned_adm.rc == 0
      failed_when: _tuned_adm.rc != 0

    - name: Set reboot required fact
      ansible.builtin.set_fact:
        reboot_required: true

# Kernel modules loading
- name: Load type1 IOMMU driver for VFIO on boot
  ansible.builtin.import_role:
    name: osp.edpm.edpm_module_load
  vars:
    modules:
      - name: vfio_iommu_type1
  when: edpm_kernel_args is search("iommu")

- name: Reboot block
  when:
    - reboot_required is defined and reboot_required
    - not edpm_kernel_defer_reboot|bool
    - not _workload_protection|default(false)|bool
  block:
    - name: Reboot tasks
      ansible.builtin.include_tasks: reboot.yaml
      when:
        - grub_file_entry_check is not changed

    - name: Skipping reboot for deployed node
      ansible.builtin.debug:  # noqa: no-handler
        msg: "Reboot is skipped for kernel arg change, user has to plan the reboot with migration and downtime"
      when:
        - grub_file_entry_check is changed
