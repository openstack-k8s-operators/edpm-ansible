---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create ceilometer config dirs
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    setype: "{{ item.setype | default('container_file_t') }}"
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: "{{ item.mode | default('750') }}"
    recurse: true
  loop:
    - { "path": "{{ edpm_ceilometer_config_dest }}/containers" }
    - { "path": "{{ edpm_ceilometer_config_dest }}/ceilometer" }
  tags:
    - edpm_telemetry


- name: Create persistent directories
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    setype: "{{ item.setype | default('container_file_t') }}"
    state: directory
    owner: "{{ item.owner | default(ansible_user) }}"
    group: "{{ item.group | default(ansible_user) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - { "path": "/var/log/containers/ceilometer", "mode": "0750" }
  tags:
    - edpm_telemetry

- name: Copy generated ceilometer configs
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode | default('640') }}"
    remote_src: "{{ telemetry_test | default('false') }}"
  loop:
    - { "src": "{{ edpm_ceilometer_config_src }}/ceilometer.conf", "dest": "{{ edpm_ceilometer_config_dest }}/ceilometer/ceilometer.conf" }
    - { "src": "{{ edpm_ceilometer_config_src }}/polling.yaml", "dest": "{{ edpm_ceilometer_config_dest }}/ceilometer/polling.yaml" }
    - { "src": "{{ edpm_ceilometer_config_src }}/ceilometer_agent_compute.json", "dest": "{{ edpm_ceilometer_config_dest }}/containers/ceilometer_agent_compute.json" }
    - { "src": "{{ edpm_ceilometer_config_src }}/ceilometer-agent-compute.json", "dest": "{{ edpm_ceilometer_config_dest }}/ceilometer/ceilometer-agent-compute.json" }
    - { "src": "{{ edpm_ceilometer_config_src }}/ceilometer_agent_ipmi.json", "dest": "{{ edpm_ceilometer_config_dest }}/containers/ceilometer_agent_ipmi.json" }
    - { "src": "{{ edpm_ceilometer_config_src }}/ceilometer-agent-ipmi.json", "dest": "{{ edpm_ceilometer_config_dest }}/ceilometer/ceilometer-agent-ipmi.json" }
  tags:
    - edpm_telemetry

- name: Deploy ceilometer compute container
  ansible.builtin.include_role:
    name: osp.edpm.edpm_container_manage
  vars:
    edpm_container_manage_config: "{{ edpm_ceilometer_config_dest }}/containers"
    edpm_container_manage_healthcheck_disabled: true
    edpm_container_manage_config_patterns: ceilometer_agent_compute.json
    edpm_container_manage_clean_orphans: false
  tags:
    - edpm_telemetry

- name: Deploy ceilometer ipmi container
  ansible.builtin.include_role:
    name: osp.edpm.edpm_container_manage
  vars:
    edpm_container_manage_config: "{{ edpm_ceilometer_config_dest }}/containers"
    edpm_container_manage_healthcheck_disabled: true
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: ceilometer_agent_ipmi.json
    edpm_container_manage_clean_orphans: false
  tags:
    - edpm_telemetry

- name: Restart ceilometer compute
  become: true
  ansible.builtin.systemd:
    state: restarted
    name: edpm_ceilometer_agent_compute.service
  tags:
    - edpm_telemetry

- name: Restart ceilometer ipmi
  become: true
  ansible.builtin.systemd:
    state: restarted
    name: edpm_ceilometer_agent_ipmi.service
  tags:
    - edpm_telemetry
