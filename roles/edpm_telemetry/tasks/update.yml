---
- name: Check for openstack_network_exporter config
  ansible.builtin.stat:
    path: "{{ edpm_telemetry_config_dest }}/openstack_network_exporter.json"
  register: openstack_network_exporter_config_json

- name: Install openstack_network_operator if not present
  when: not openstack_network_exporter_config_json.stat.exists
  become: true
  block:
    - name: Determine if cacert file exists
      ansible.builtin.stat:
        path: "{{ edpm_telemetry_cacerts }}/tls-ca-bundle.pem"
      register: ca_bundle_stat_res

    - name: Check that tls.crt exists
      ansible.builtin.stat:
        path: "{{ edpm_telemetry_certs }}/tls.crt"
      register: tls_crt_stat

    - name: Check that tls.key exists
      ansible.builtin.stat:
        path: "{{ edpm_telemetry_certs }}/tls.key"
      register: tls_key_stat

    - name: Render openstack_network_exporter config
      ansible.builtin.template:
        src: "config/openstack_network_exporter.yaml.j2"
        dest: "{{ edpm_telemetry_config_dest }}/openstack_network_exporter.yaml"
        mode: 0644
      vars:
        ca_bundle_exists: "{{ ca_bundle_stat_res.stat.exists }}"
        tls_cert_exists: "{{ tls_crt_stat.stat.exists and tls_key_stat.stat.exists }}"

    - name: Deploy openstack_network_exporter container
      ansible.builtin.include_role:
        name: osp.edpm.edpm_container_standalone
      vars:
        edpm_container_standalone_service: "openstack_network_exporter"
        edpm_container_standalone_container_defs:
          openstack_network_exporter: "{{ lookup('template', 'container_defs/openstack_network_exporter.yaml.j2') | from_yaml }}"
        ca_bundle_exists: "{{ ca_bundle_stat_res.stat.exists }}"
        tls_cert_exists: "{{ tls_crt_stat.stat.exists and tls_key_stat.stat.exists }}"
