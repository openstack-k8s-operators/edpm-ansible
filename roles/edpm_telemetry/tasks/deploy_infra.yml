---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Check that tls.crt exists
  ansible.builtin.stat:
    path: "{{ edpm_telemetry_certs }}/tls.crt"
  register: tls_crt_stat

- name: Check that tls.key exists
  ansible.builtin.stat:
    path: "{{ edpm_telemetry_certs }}/tls.key"
  register: tls_key_stat

- name: Configure tls if present
  become: true
  when:
    - tls_crt_stat.stat.exists and tls_key_stat.stat.exists
  tags:
    - edpm_logging
  block:
    - name: Create config file for node_exporter
      ansible.builtin.copy:
        dest: "{{ edpm_ceilometer_config_dest }}/ceilometer/node_exporter.yaml"
        mode: "0644"
        content: |
          tls_server_config:
            cert_file: /etc/node_exporter/tls/tls.crt
            key_file: /etc/node_exporter/tls/tls.key

    - name: Allow read the crt
      ansible.builtin.file:
        path: "{{ edpm_telemetry_certs }}/tls.crt"
        mode: "0644"

    - name: Allow read the key
      ansible.builtin.file:
        path: "{{ edpm_telemetry_certs }}/tls.key"
        mode: "0644"

    - name: Deploy node_exporter container with TLS enabled
      containers.podman.podman_container:
        image: "{{ edpm_telemetry_node_exporter_image }}"
        name: node_exporter
        state: present
        recreate: true
        privileged: true
        ports:
          - "9100:9100"
        command:
          - "--web.config.file=/etc/node_exporter/node_exporter.yaml"
          - "--collector.systemd"
          - "--collector.systemd.unit-include=(edpm_.*|ovs.*|openvswitch|virt.*|rsyslog)\\.service"
        volumes:
          - "/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:rw,z"
          - "{{ edpm_ceilometer_config_dest }}/ceilometer/node_exporter.yaml:/etc/node_exporter/node_exporter.yaml:z"
          - "{{ edpm_telemetry_certs }}:/etc/node_exporter/tls:z"

- name: Deploy node_exporter container with TLS disabled if there are no certs present
  become: true
  containers.podman.podman_container:
    image: "{{ edpm_telemetry_node_exporter_image }}"
    name: node_exporter
    state: present
    recreate: true
    privileged: true
    ports:
      - "9100:9100"
    command:
      - "--collector.systemd"
      - "--collector.systemd.unit-include=(edpm_.*|ovs.*|openvswitch|virt.*|rsyslog)\\.service"
    volumes:
      - "/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:rw,z"
  tags:
    - edpm_telemetry
  when:
    - not tls_key_stat.stat.exists or not tls_crt_stat.stat.exists

- name: Create systemd service file for node_exporter
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/edpm_node_exporter.service
    mode: "0644"
    content: |
      [Unit]
      Description=node_exporter container
      Wants=network-online.target
      After=network-online.target
      RequiresMountsFor=%t/containers

      [Service]
      Restart=always
      ExecStart=/usr/bin/podman start node_exporter
      ExecReload=/usr/bin/podman kill --signal HUP node_exporter
      ExecStop=/usr/bin/podman stop node_exporter
      ExecStopPost=/usr/bin/podman stop node_exporter
      SuccessExitStatus=0 137 142 143
      TimeoutStopSec=84
      KillMode=control-group
      Type=forking
      RestartSec=60

      [Install]
      WantedBy=multi-user.target
  tags:
    - edpm_telemetry

- name: Enable node_exporter
  become: true
  ansible.builtin.systemd:
    enabled: true
    name: edpm_node_exporter.service
  tags:
    - edpm_telemetry

- name: Restart node_exporter
  become: true
  ansible.builtin.systemd:
    state: restarted
    name: edpm_node_exporter.service
  tags:
    - edpm_telemetry
