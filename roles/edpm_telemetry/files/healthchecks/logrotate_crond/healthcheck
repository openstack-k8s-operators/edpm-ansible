#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright 2024 Inc.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import datetime
import os
import sys


ROTATION_SPREAD = datetime.timedelta(days=1)
STATUS_LOG_PATH = "/var/lib/logrotate/logrotate-crond.status"


def check_rotation(log_path: str) -> (int, str):
    """
    Returns 0 if log_path contains records of log rotation
    not older that ROTATION_SPREAD, otherwise returns 1.
    """
    if not os.path.isfile(log_path):
        return 1, "Status log %s does not exist." % log_path
    with open(log_path, 'r') as status_log: 
        for record in status_log:
            if not record or "logrotate state" in record:
                continue
            try:
                log, dtt = record.split()
                rdt = datetime.datetime.strptime(dtt, "%Y-%m-%d-%H:%M:%S")
            except ValueError:
                return 1, "Invalid record: %s" % record
            limit = datetime.datetime.today().date() - ROTATION_SPREAD
            if rdt.date() >= limit:
                return 0, ""
        else:
            return 1, "No log was rotated is %s" % ROTATION_SPREAD


if __name__ == "__main__":
    if len(sys.argv) > 1:
        pth = sys.argv[1]
    else:
        pth = STATUS_LOG_PATH
    rc, reason = check_rotation(pth)
    if rc != 0:
        print(reason)
    sys.exit(rc)