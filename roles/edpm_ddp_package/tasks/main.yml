---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Gather ansible_local facts
  ansible.builtin.setup:
    filter: ansible_local

- name: Fail if bootc
  ansible.builtin.debug:
    msg: The edpm_ddp_package role can not be used on a bootc system.
  failed_when: ansible_local.bootc | bool

- name: Apply user provided DDP package
  when: edpm_ddp_package | string != "" and edpm_ddp_package | string != "ddp"
  block:
    - name: List DDP packages
      ansible.builtin.find:
        path: "{{ edpm_ddp_package_path }}/{{ edpm_ddp_package }}"
        patterns: "ice[_-]?*.pkg*"
      register: find_ddp_package_files

    - name: Get latest version of specified Ddp package(s)
      ansible.builtin.set_fact:
        ddp_last_package_file: "{{ find_ddp_package_files.files | map(attribute='path') | list | community.general.version_sort | last }}"

    - name: Remove existing DDP package
      become: true
      block:
        - name: Check if previous ddp/ice.pkg exists
          ansible.builtin.stat:
            path: "{{ edpm_ddp_package_path }}/ddp/ice.pkg"
          register: ice_pkg

        - name: Remove ddp/ice.pkg if it exists
          ansible.builtin.file:
            path: "{{ edpm_ddp_package_path }}/ddp/ice.pkg"
            state: absent
          when: ice_pkg.stat.exists

        - name: Check if ddp/ice.pkg.xz exists(rhel9)
          ansible.builtin.stat:
            path: "{{ edpm_ddp_package_path }}/ddp/ice.pkg.xz"
          register: ice_pkg_xz

        - name: Remove ddp/ice.pkg.xz if it exists
          ansible.builtin.file:
            path: "{{ edpm_ddp_package_path }}/ddp/ice.pkg.xz"
            state: absent
          when: ice_pkg_xz.stat.exists

    - name: Select and deploy DDP package
      become: true
      when: ddp_last_package_file is defined
      block:
        - name: Check package file name ice.pkg
          ansible.builtin.set_fact:
            package_filename: "ice.pkg"
          when: ice_pkg.stat.exists

        - name: Check package file name ice.pkg.xz
          ansible.builtin.set_fact:
            package_filename: "ice.pkg.xz"
          when: ice_pkg_xz.stat.exists

        - name: Confiure ddp/ice.pkg
          ansible.builtin.file:
            src: '{{ ddp_last_package_file }}'
            dest: "{{ edpm_ddp_package_path }}/ddp/{{ package_filename }}"
            state: link
          when: edpm_ddp_package | string != ""

        - name: Rebuild initramfs image
          ansible.builtin.command: "{{ edpm_rebuild_initramfs_command }}"
          register: dracut_command_output
          changed_when: dracut_command_output.rc == 0
          failed_when: dracut_command_output.rc != 0

        - name: Reload DDP module
          when: edpm_ddp_module | string != ""
          block:
            - name: Unload ice module
              community.general.modprobe:
                name: "{{ edpm_ddp_module }}"
                state: absent

            - name: Looad new ice module
              community.general.modprobe:
                name: "{{ edpm_ddp_module }}"
                state: present
