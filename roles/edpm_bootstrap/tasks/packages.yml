---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Gather facts if they don't exist
  ansible.builtin.setup:
    gather_subset: min
  when: "'distribution' not in ansible_facts"
  tags:
    - always

# Currently only supported on RHEL as edpm does not have a version package

- name: Install release version package
  ansible.builtin.dnf:
    name: "{{ edpm_bootstrap_release_version_package }}"
    state: present
  when:
    - (ansible_facts['distribution'] | lower) == 'redhat'
    - (edpm_bootstrap_release_version_package | list | length) > 0
  become: true
  register: edpm_bootstrap_release_version_package_install
  until: edpm_bootstrap_release_version_package_install.rc == 0
  retries: "{{ edpm_bootstrap_download_retries }}"
  delay: "{{ edpm_bootstrap_download_delay }}"

- name: Install required packages to bootstrap EDPM
  ansible.builtin.dnf:
    name: "{{ edpm_bootstrap_packages_bootstrap }}"
    state: present
  # When a node is deployed with overcloud-minimal, OVS isn't required so let's
  # ignore the case where the package can't be found (e.g. missing subscription).
  # https://bugzilla.redhat.com/show_bug.cgi?id=1820306
  failed_when:
    - (ansible_facts['distribution'] | lower) == 'redhat'
    - not ansible_check_mode | bool
    - (edpm_bootstrap_packages_bootstrap_result.rc | int) == 1
    - not ('No package openvswitch available.' in edpm_bootstrap_packages_bootstrap_result.failures | default([]))
  register: edpm_bootstrap_packages_bootstrap_result
  until: edpm_bootstrap_packages_bootstrap_result.rc == 0
  retries: "{{ edpm_bootstrap_download_retries }}"
  delay: "{{ edpm_bootstrap_download_delay }}"
  become: true

- name: Ensure packages are actually well installed
  ansible.builtin.command: "rpm -V {{ edpm_bootstrap_packages_bootstrap | join(' ') }}"  # noqa: command-instead-of-module
  register: rpm_verify_result
  failed_when:
    - "'%verify' in rpm_verify_result.stderr"
  changed_when: false
  become: true

- name: Install and enable network service
  when:
    - (edpm_bootstrap_legacy_network_packages | length) > 0
  become: true
  block:
    - name: Deploy network-scripts required for deprecated network service
      ansible.builtin.dnf:
        name: "{{ edpm_bootstrap_legacy_network_packages }}"
        state: present
      register: edpm_bootstrap_legacy_network_packages_result
      until: edpm_bootstrap_legacy_network_packages_result.rc == 0
      retries: "{{ edpm_bootstrap_download_retries }}"
      delay: "{{ edpm_bootstrap_download_delay }}"
    - name: Ensure network service is enabled
      ansible.builtin.systemd:
        name: "{{ edpm_bootstrap_network_service }}"
        enabled: true
