---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


- name: Prepare
  hosts: all
  roles:
    - role: ../../../../molecule/common/test_deps
    - role: osp.edpm.env_data

- name: Setup DUT
  hosts: all
  vars:
    edpm_nova_tls_ca_src_dir: /tmp/pki
  pre_tasks:
    - name: set basic user fact
      set_fact:
        ansible_user: "{{ lookup('env', 'USER') }}"
      when:
        - ansible_user is undefined
    - name: set basic home fact
      set_fact:
        ansible_user_dir: "{{ lookup('env', 'HOME') }}"
      when:
        - ansible_user_dir is undefined
  tasks:
    - name: Enable package repos
      become: true
      ansible.builtin.shell: |
        set -euxo pipefail
        pushd /var/tmp
        curl -sL https://github.com/openstack-k8s-operators/repo-setup/archive/refs/heads/main.tar.gz | tar -xz
        pushd repo-setup-main
        python3 -m venv ./venv
        PBR_VERSION=0.0.0 ./venv/bin/pip install ./
        ./venv/bin/repo-setup current-podified -b antelope
        popd
        rm -rf repo-setup-main
    # NOTE(gibi): this is done by the boostrap role in a real deployment
    - name: Install openstack-selinux
      become: true
      ansible.builtin.dnf:
        name: "openstack-selinux"
        state: present
    - name: set /etc/localtime
      become: true
      ansible.builtin.file:
        path: /etc/localtime
        src: /usr/share/zoneinfo/UTC
        state: link
    - name: set timezone
      ansible.builtin.import_role:
        name: osp.edpm.edpm_timezone
    - name: install podman
      ansible.builtin.import_role:
        name: osp.edpm.edpm_podman
    - name: Create firewall directory
      become: true
      ansible.builtin.file:
        path: '/var/lib/edpm-config/firewall'
        state: directory
        owner: root
        group: root
        mode: 0750
    - name: open port 22 (edpm_nftables will active this later)
      become: true
      copy:
        dest: /var/lib/edpm-config/firewall/sshd-networks.yaml
        content: |
          - rule_name: 003 Allow SSH
            rule:
              proto: tcp
              dport: 22
    - name: install libvirt
      ansible.builtin.import_role:
        name: osp.edpm.edpm_libvirt
    - name: ensure /etc/multipath.conf exists
      become: true
      ansible.builtin.file:
        path: /etc/multipath.conf
        state: touch
        mode: "0644"
    - name: Create Ceph client file directory
      become: true
      ansible.builtin.file:
        path: '/var/lib/openstack/config/ceph/'
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Create ssh_known_hosts file
      become: true
      ansible.builtin.file:
        path: '/etc/ssh/ssh_known_hosts'
        state: touch
        owner: root
        group: root
        mode: '0655'

    - name: create pki temp directory
      become: true
      ansible.builtin.file:
        path: "{{ edpm_nova_tls_ca_src_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0777

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ edpm_nova_tls_ca_src_dir }}/ca.key"

    - name: Create a certificate signing request for ca
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ edpm_nova_tls_ca_src_dir }}/ca.key"
        organization_name: fake-corp
        basic_constraints:
          - 'CA:TRUE'
        subject_alt_name:
          - "DNS:compute-1.example.com"
          - "DNS:compute-1"
          - "DNS:{{ inventory_hostname }}"
        key_usage:
          - keyCertSign
      register: csr

    - name: Create a certificate athority
      community.crypto.x509_certificate:
        path: "{{ edpm_nova_tls_ca_src_dir }}/tls-ca-bundle.pem"
        privatekey_path: "{{ edpm_nova_tls_ca_src_dir }}/ca.key"
        csr_content: "{{ csr.csr }}"
        provider: selfsigned

    - name: Gather required facts
      ansible.builtin.setup:
        gather_subset:
          - "!all"
          - "!min"
          - "default_ipv4"
          -  "system"

    # FIXME(sean-k-mooney): this is a hack to work around the fact that we dont
    # currently manage the hostname on the DUT via boostrap or a dedicated role
    # in the molecule test. This is needed to ensure the hostname is resolvable
    # when executing virsh commands. remove this when we have a proper solution
    - name: Ensure hostname is resolvable in /etc/hosts
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ansible_default_ipv4.address | default('127.0.0.1') }} {{ ansible_fqdn }} {{ inventory_hostname }}"
        state: present

    - name: Create container config dirs for test
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "directory"
        setype: "container_file_t"
        owner: "{{ item.owner | default(ansible_user) }}"
        group: "{{ item.group | default(ansible_user) }}"
        mode: "{{ item.mode | default(omit) }}"
      loop:
        - {"path": "/var/lib/openstack/config/nova", "mode": "0755"}

    - name: Create a test file to be deleted
      become: true
      ansible.builtin.file:
        path: '/var/lib/openstack/config/nova/test.conf'
        state: touch
        mode: 0644

    - name: Create vendor integration directories
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "directory"
        mode: "0755"
      loop:
        - {"path": "/var/lib/vendor_integration"}
        - {"path": "/opt/vendor_integration_2"}
