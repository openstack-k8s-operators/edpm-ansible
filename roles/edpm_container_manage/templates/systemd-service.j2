[Unit]
Description={{ lookup('dict', container_data_unit).key }} container
After=edpm-container-shutdown.service
{% if lookup('dict', container_data_unit).value.depends_on | default([]) | length > 0 %}
After={{ lookup('dict', container_data_unit).value.depends_on | default([]) | join(' ') }}
Wants={{ lookup('dict', container_data_unit).value.depends_on | default([]) | join(' ') }}
{% endif %}
{% if lookup('dict', container_data_unit).value.part_of| default([]) | length > 0 %}
PartOf={{ lookup('dict', container_data_unit).value.part_of | default([]) | join(' ') }}
{% endif %}
[Service]
Restart=always
{% if lookup('dict', container_data_unit).value.depends_on is defined and (lookup('dict', container_data_unit).value.depends_on | length > 0) and podman_drop_in | default('false') %}
ExecStart=/usr/libexec/edpm-start-podman-container {{ lookup('dict', container_data_unit).key }}
{% else %}
ExecStart=/usr/bin/podman start {{ lookup('dict', container_data_unit).key }}
{% endif %}
{% if not (lookup('dict', container_data_unit).value.no_reload | default(false) | bool) %}
ExecReload=/usr/bin/podman kill --signal {{ lookup('dict', container_data_unit).value.reload_signal | default('SIGHUP') | regex_replace('^SIG', '') }} {{ lookup('dict', container_data_unit).key }}
{% endif %}
{% if lookup('dict', container_data_unit).value.pre_stop_exec is defined %}
ExecStop=-/usr/bin/podman exec {{ lookup('dict', container_data_unit).key }} {{ lookup('dict', container_data_unit).value.pre_stop_exec }}
{% endif %}
ExecStop=/usr/bin/podman stop -t {{ lookup('dict', container_data_unit).value.stop_grace_period | default(42) | int }} {{ lookup('dict', container_data_unit).key }}
ExecStopPost=/usr/bin/podman stop -t {{ lookup('dict', container_data_unit).value.stop_grace_period | default(42) | int }} {{ lookup('dict', container_data_unit).key }}
SuccessExitStatus=137 142 143
TimeoutStopSec={{ 2*(lookup('dict', container_data_unit).value.stop_grace_period | default(42) | int) }}
KillMode={{ lookup('dict', container_data_unit).value.kill_mode | default('control-group') }}
Type=forking
PIDFile=/run/{{ lookup('dict', container_data_unit).key }}.pid
{% if lookup('dict', container_data_unit).value.systemd_exec_flags is defined %}
{%   for s_flag, s_value in lookup('dict', container_data_unit).value.systemd_exec_flags.items() %}
{{ s_flag }}={{ s_value }}
{%   endfor %}
{% endif %}
[Install]
WantedBy=multi-user.target
