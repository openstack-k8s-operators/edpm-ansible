---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create all containers from /tmp/container-configs
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: '*.json'
  tasks:
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that centos container was created correctly
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check for centos container
          command: podman container exists centos
        - name: Gather facts about centos container
          containers.podman.podman_container_info:
            name: centos
          register: centos_infos
        - name: Assert that centos container has the right image
          assert:
            that:
              - "'centos:stream9' in centos_infos.containers.0.ImageName"
            fail_msg: 'centos container has wrong image'
            success_msg: 'centos container has the right image'
        - name: Check if edpm_centos systemd service is active
          command: systemctl is-active --quiet edpm_centos
          register: edpm_centos_active_result
        - name: Assert that edpm_centos systemd service is active
          assert:
            that:
              - edpm_centos_active_result.rc == 0
            fail_msg: 'edpm_centos systemd service is not active'
            success_msg: 'edpm_centos systemd service is active'
    - name: Verify that centos bis container was created correctly
      block:
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Gather facts about centos_bis container
          containers.podman.podman_container_info:
            name: centos_bis
          register: centos_bis_infos
        - name: Assert that centos_bis container has the right image
          assert:
            that:
              - "'centos:stream9' in centos_bis_infos.containers.0.ImageName"
            fail_msg: 'centos_bis container has wrong image'
            success_msg: 'centos_bis container has the right image'
    - name: Verify that centos three container was created correctly
      block:
        - name: Check for centos_three container
          command: podman container exists centos_three
        - name: Gather facts about centos_three container
          containers.podman.podman_container_info:
            name: centos_three
          register: centos_three_infos
        - name: Assert that centos_three container has the right image
          assert:
            that:
              - "'centos:stream9' in centos_three_infos.containers.0.ImageName"
            fail_msg: 'centos_three container has wrong image'
            success_msg: 'centos_three container has the right image'

- name: Test idempotency on centos container
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: '*.json'
  tasks:
    - name: Gather facts about centos container before new run
      containers.podman.podman_container_info:
        name: centos
      register: centos_infos_old
      when:
        - not ansible_check_mode|bool
    - include_role:
        name: osp.edpm.edpm_container_manage
    - name: Gather facts about centos container after new run
      containers.podman.podman_container_info:
        name: centos
      register: centos_infos_new
      when:
        - not ansible_check_mode|bool
  post_tasks:
    - name: Assert that centos container has not been re-created
      assert:
        that:
          - centos_infos_new['containers'][0]['Id'] == centos_infos_old['containers'][0]['Id']
        fail_msg: 'centos container was wrongly re-created'
        success_msg: 'centos container was not re-created'
      when:
        - not ansible_check_mode|bool

- name: Test systemd state on centos container after a manual stop
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: '*.json'
  tasks:
    - name: Stop systemd service for edpm_centos in a manual stop
      systemd:
        name: edpm_centos.service
        state: stopped
        enabled: false
        daemon_reload: true
      # https://github.com/ansible/ansible/pull/68136
      ignore_errors: "{{ ansible_check_mode }}"
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Check if edpm_centos systemd service is active after a manual stop
      command: systemctl is-active --quiet edpm_centos
      register: edpm_centos_active_result
    - name: Assert that edpm_centos systemd service is active after a manual stop
      when:
        - not ansible_check_mode|bool
      assert:
        that:
          - edpm_centos_active_result.rc == 0
        fail_msg: 'edpm_centos systemd service is not active after a manual stop'
        success_msg: 'edpm_centos systemd service is active after a manual stop'

- name: Manage only one container
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: 'centos.json'
    edpm_container_manage_clean_orphans: false
    edpm_container_manage_config_overrides:
      centos:
        image: quay.io/centos/centos:stream9
  tasks:
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that all containers still exist
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check for centos container
          command: podman container exists centos
        - name: Gather facts about centos container
          containers.podman.podman_container_info:
            name: centos
          register: centos_infos
        - name: Assert that centos container has the right image
          assert:
            that:
              - "'quay.io/centos/centos:stream9' in centos_infos.containers.0.ImageName"
            fail_msg: "centos container has wrong image {{ centos_infos.containers }}"
            success_msg: 'centos container has the right image'
        - name: Check if edpm_centos systemd service is active
          command: systemctl is-active --quiet edpm_centos
          register: edpm_centos_active_result
        - name: Assert that edpm_centos systemd service is active
          assert:
            that:
              - edpm_centos_active_result.rc == 0
            fail_msg: 'edpm_centos systemd service is not active'
            success_msg: 'edpm_centos systemd service is active'
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Check for centos_three container
          command: podman container exists centos_three

- name: Manage a wrong container (user error)
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: 'centos.json'
    edpm_container_manage_clean_orphans: false
  tasks:
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that all containers still exist
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check for centos container
          command: podman container exists centos
        - name: Gather facts about centos container
          containers.podman.podman_container_info:
            name: centos
          register: centos_infos
        - name: Check if edpm_centos systemd service is active
          command: systemctl is-active --quiet edpm_centos
          register: edpm_centos_active_result
        - name: Assert that edpm_centos systemd service is active
          assert:
            that:
              - edpm_centos_active_result.rc == 0
            fail_msg: 'edpm_centos systemd service is not active'
            success_msg: 'edpm_centos systemd service is active'
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Check for centos_three container
          command: podman container exists centos_three

- name: Test a container removal
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: 'centos_*.json'
  tasks:
    - name: Remove centos container config
      file:
        path: '/tmp/container-configs/centos.json'
        state: absent
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that all containers still exist
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check that centos container was removed
          command: podman container exists centos
          register: container_exist
          failed_when: container_exist.rc == 0
        - name: Check if edpm_centos systemd service is still active
          command: systemctl is-active --quiet edpm_centos
          register: edpm_centos_active_result
          failed_when: edpm_centos_active_result.rc == 0
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Check for centos_three container
          command: podman container exists centos_three

- name: Test a container update
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: 'centos_*.json'
  tasks:
    - name: Modify the centos_bis container config
      copy:
        content: |
          {
            "image": "quay.io/centos/centos:stream9",
            "net": "host",
            "command": "sleep 10"
          }
        dest: '/tmp/container-configs/centos_bis.json'
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that centos bis container was re-created correctly
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Gather facts about centos_bis container
          containers.podman.podman_container_info:
            name: centos_bis
          register: centos_bis_infos
        - name: Assert that centos_bis container has the right image
          assert:
            that:
              - "'quay.io/centos/centos:stream9' in centos_bis_infos.containers.0.ImageName"
            fail_msg: 'centos_bis container has wrong image'
            success_msg: 'centos_bis container has the right image'
    - name: Check for centos_three container
      command: podman container exists centos_three
      when:
        - not ansible_check_mode|bool

- name: Test a container config override
  become: true
  hosts: all
  gather_facts: false
  vars:
    edpm_container_manage_config: '/tmp/container-configs'
    edpm_container_manage_debug: true
    edpm_container_manage_config_patterns: 'centos_*.json'
    edpm_container_manage_config_overrides:
      centos_bis:
        image: centos:stream9
  tasks:
    - include_role:
        name: osp.edpm.edpm_container_manage
  post_tasks:
    - name: Verify that centos bis container was re-created correctly
      when:
        - not ansible_check_mode|bool
      block:
        - name: Check for centos_bis container
          command: podman container exists centos_bis
        - name: Gather facts about centos_bis container
          containers.podman.podman_container_info:
            name: centos_bis
          register: centos_bis_infos
        - name: Assert that centos_bis container has the right image
          assert:
            that:
              - "'centos:stream9' in centos_bis_infos.containers.0.ImageName"
            fail_msg: 'centos_bis container has wrong image'
            success_msg: 'centos_bis container has the right image'
    - name: Check for centos_three container
      command: podman container exists centos_three
      when:
        - not ansible_check_mode|bool
