---
# Copyright 2019 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.


# "edpm_container_manage" will search for and load any operating system variable file

# found within the "vars/" path. If no OS files are found the task will skip.
#- name: Gather variables for each operating system
#  ansible.builtin.include_vars: "{{ item }}"
#  with_first_found:
#    - files:
#        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
#        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
#        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
#        - "{{ ansible_facts['distribution'] | lower }}.yml"
#        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_version'].split('.')[0] }}.yml"
#        - "{{ ansible_facts['os_family'] | lower }}.yml"
#      skip: True
#  tags:
#    - always

- name: Create container logs path
  ansible.builtin.file:
    path: "{{ edpm_container_manage_log_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Generate containers configs data
  no_log: "{{ not edpm_container_manage_debug }}"
  block:
    - name: "Find all matching configs configs for in {{ edpm_container_manage_config }}"
      container_config_data:
        config_path: "{{ edpm_container_manage_config }}"
        config_pattern: "{{ edpm_container_manage_config_patterns }}"
        config_overrides: "{{ edpm_container_manage_config_overrides }}"
        debug: "{{ edpm_container_manage_debug }}"
      register: container_config_data
    - name: Finalise hashes for all containers
      ansible.builtin.set_fact:
        all_containers_hash: "{{ container_config_data.configs }}"

- name: "Manage containers from {{ edpm_container_manage_config }}"
  when:
    - (all_containers_hash|length) > 0
    - edpm_container_manage_cli == 'podman'
  become: true
  block:
    - name: "Update container configs with new config hashes"
      container_config_hash:
      when:
        - edpm_container_manage_update_config_hash|bool
    - name: "Delete orphan containers from {{ edpm_container_manage_config }}"
      ansible.builtin.include_tasks: delete_orphan.yml
      when:
        - edpm_container_manage_clean_orphans|bool
    - name: "Create containers from {{ edpm_container_manage_config }}"
      ansible.builtin.include_tasks: create.yml
