---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Setup DUT
  hosts: all
  vars:
    edpm_libvirt_tls_cert_src_dir: /tmp/pki
    edpm_libvirt_password_path: /tmp/libvirtpw
  pre_tasks:
    - name: set basic user fact
      set_fact:
        ansible_user: "{{ lookup('env', 'USER') }}"
      when:
        - ansible_user is undefined
    - name: set basic home fact
      set_fact:
        ansible_user_dir: "{{ lookup('env', 'HOME') }}"
      when:
        - ansible_user_dir is undefined
  tasks:
    - name: Enable package repos
      become: true
      ansible.builtin.shell: |
        set -euxo pipefail
        pushd /var/tmp
        curl -sL https://github.com/openstack-k8s-operators/repo-setup/archive/refs/heads/main.tar.gz | tar -xz
        pushd repo-setup-main
        python3 -m venv ./venv
        PBR_VERSION=0.0.0 ./venv/bin/pip install ./
        ./venv/bin/repo-setup current-podified -b antelope
        popd
        rm -rf repo-setup-main

    - name: Install host packages
      become: true
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop:
        # NOTE(gibi): this is done by the boostrap role in a real deployment
        - openstack-selinux
        # NOTE(sean-k-mooney): this is needed to generate certs for tls testing
        - python3-cryptography

    - name: set /etc/localtime
      become: true
      ansible.builtin.file:
        path: /etc/localtime
        src: /usr/share/zoneinfo/UTC
        state: link

    - name: set timezone
      ansible.builtin.import_role:
        name: osp.edpm.edpm_timezone

    - name: Create firewall directory
      become: true
      ansible.builtin.file:
        path: '/var/lib/edpm-config/firewall'
        state: directory
        owner: root
        group: root
        mode: 0750

    - name: open port 22 (edpm_nftables will active this later)
      become: true
      ansible.builtin.copy:
        dest: /var/lib/edpm-config/firewall/sshd-networks.yaml
        content: |
          - rule_name: 003 Allow SSH
            rule:
              proto: tcp
              dport: 22

    - name: Create Ceph client file directory
      become: true
      ansible.builtin.file:
        path: '/var/lib/openstack/config/ceph/'
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create random mock Ceph FSID
      ansible.builtin.command: uuidgen
      register: fsid

    - name: Create random mock Cephx key
      ansible.builtin.shell:
      args:
        executable: /usr/bin/python
        cmd: |
          import os,struct,time,base64
          key = os.urandom(16)
          header = struct.pack("<hiih", 1, int(time.time()), 0, len(key))
          print(base64.b64encode(header + key).decode())
      register: cephx

    - name: Create a mock Ceph conf file
      become: true
      ansible.builtin.copy:
        dest: /var/lib/openstack/config/ceph/ceph.conf
        content: |
          [global]
          fsid = {{ fsid.stdout }}
          mon host = 192.168.42.6,192.168.42.7,192.168.42.8

    - name: Create a mock Cephx keyring file
      become: true
      ansible.builtin.copy:
        dest: /var/lib/openstack/config/ceph/ceph.client.openstack.keyring
        content: |
          [client.openstack]
          key = {{ cephx.stdout }}
          caps mgr = allow rw
          caps mon = profile r
          caps osd = allow class-read object_prefix rbd_children, {{
                                    pools | map('regex_replace', '^(.*)$',
                                    'allow rwx pool=\1') | join(', ') }}
      vars:
        pools: ['vms', 'volumes', 'images']

    - name: create pki temp directory
      become: true
      ansible.builtin.file:
        path: "{{ edpm_libvirt_tls_cert_src_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0777

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.key"

    - name: Create a certificate signing request for ca
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.key"
        organization_name: fake-corp
        basic_constraints:
          - 'CA:TRUE'
        subject_alt_name:
          - "DNS:compute-1.example.com"
          - "DNS:compute-1"
          - "DNS:{{ inventory_hostname }}"
        key_usage:
          - keyCertSign
      register: csr


    - name: Create a certificate athority
      community.crypto.x509_certificate:
        path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.crt"
        privatekey_path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.key"
        csr_content: "{{ csr.csr }}"
        provider: selfsigned

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key"

    - name: Create a certificate signing request for libvirt server and client cert
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key"
        organization_name: fake-corp
        subject_alt_name:
          - "DNS:compute-1.example.com"
          - "DNS:compute-1"
          - "DNS:{{ inventory_hostname }}"
        extended_key_usage:
          - serverAuth
          - clientAuth
      register: csr

    - name: Sign the certificate signing request
      community.crypto.x509_certificate:
        path: "{{ edpm_libvirt_tls_cert_src_dir }}/tls.crt"
        ownca_path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.crt"
        ownca_privatekey_path: "{{ edpm_libvirt_tls_cert_src_dir }}/ca.key"
        csr_content: "{{ csr.csr }}"
        provider: ownca


    - name: Create password secret
      ansible.builtin.copy:
        dest: "{{ edpm_libvirt_password_path }}"
        content: "correct horse battery staple"
      # FIXME(sean-k-mooney): this is a hack to work around
      # the fact that the playbook uses a lookup plugin which always
      # executes on the ansible contoller. This is needed to ensure
      # the password is available locally when runing under vagrant.
      delegate_to: localhost

    # FIXME(sean-k-mooney): this is a hack to work around the fact that we dont
    # currently manage the hostname on the DUT via boostrap or a dedicated role
    # in the molecule test. This is needed to ensure the hostname is resolvable
    # when executing virsh commands. remove this when we have a proper solution
    - name: Ensure hostname is resolvable in /etc/hosts
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ansible_default_ipv4.address | default('127.0.0.1') }} {{ ansible_fqdn }} {{ inventory_hostname }}"
        state: present
