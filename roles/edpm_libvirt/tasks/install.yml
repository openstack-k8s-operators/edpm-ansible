---
- name: Install libvirt packages
  tags:
    - install
    - libvirt
  become: true
  ansible.builtin.dnf:
    name: "{{ edpm_libvirt_packages }}"
    state: present
  register: edpm_libvirt_package_install
  until: edpm_libvirt_package_install is succeeded
  retries: "{{ edpm_libvirt_download_retries }}"
  delay: "{{ edpm_libvirt_download_delay }}"
  notify:
    - Restart libvirt

- name: Ensure monolithic libvirt and tcp socket activation is not enabled or running
  tags:
    - install
    - libvirt
  become: true
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    masked: true
    state: stopped
  loop:
    - "libvirtd"
    - "libvirtd-tcp.socket"
    - "libvirtd-tls.socket"
    - "virtproxyd-tcp.socket"

- name: Ensure libvirt services are enabled and running
  tags:
    - install
    - libvirt
  become: true
  ansible.builtin.systemd:
    name: "{{ item }}.service"
    enabled: true
    masked: false
  loop: "{{ edpm_libvirt_services }}"

- name: Configure virtproxyd-tls.socket
  tags:
    - install
    - libvirt
  become: true
  ansible.builtin.systemd:
    name: "virtproxyd-tls.socket"
    enabled: "{{ edpm_libvirt_tls_certs_enabled | default(False) | bool }}"
    masked: "{{ edpm_libvirt_tls_certs_enabled | ternary(False, True) }}"
    state: "{{ edpm_libvirt_tls_certs_enabled | default(False) | ternary('started', 'stopped') }}"

- name: Configure socket activation for libvirt services
  tags:
    - install
    - libvirt
  become: true
  vars:
    socket_suffix: ".socket"
    socket_types: ['', '-ro', '-admin']
  ansible.builtin.systemd:
    name: "{{ item.0 }}{{ item.1 }}{{ socket_suffix }}"
    enabled: true
    masked: false
  when: not (item.0 == 'virtlogd' and item.1 == '-ro')
  loop: "{{ edpm_libvirt_services | product(socket_types) | list }}"
