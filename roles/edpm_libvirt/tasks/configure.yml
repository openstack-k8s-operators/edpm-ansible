---
# TODO(sean-k-mooney): This should be refactored to not use a lookup plugin
# to read the password from a file on the controller.
- name: Get libvirt password
  ansible.builtin.set_fact:
    sasl_password: "{{ lookup('file', edpm_libvirt_password_path, lstrip=false, rstrip=false) }}"
  no_log: true
  when: edpm_libvirt_tls_certs_enabled|bool

- name: Create libvirt config dir
  tags:
    - configure
    - libvirt
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    setype: "{{ item.setype | default('container_file_t') }}"
    owner: "{{ item.owner | default(ansible_user) }}"
    group: "{{ item.group | default(ansible_user) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - {"path": "/etc/tmpfiles.d/", "owner": "root", "group": "root"}
    - {"path": "/var/lib/edpm-config/firewall", "owner": "root", "group": "root"}
    - {"path": "/etc/pki/libvirt", "owner": "root", "group": "root"}
    - {"path": "/etc/pki/libvirt/private", "owner": "root", "group": "root"}
    - {"path": "/etc/pki/CA", "owner": "root", "group": "root"}
    - {"path": "/etc/pki/qemu", "owner": "root", "group": "qemu"}

- name: Render libvirt config files
  tags:
    - configure
    - libvirt
  become: true
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/etc/{{ item.dest }}"
    mode: "{{ item.mode | default('0640') }}"
    # FIXME: update to libvirt user/group
    owner: "root"
    group: "root"
  loop:
    - {"src": "virtlogd.conf", "dest": "libvirt/virtlogd.conf"}
    - {"src": "virtnodedevd.conf", "dest": "libvirt/virtnodedevd.conf"}
    - {"src": "virtproxyd.conf", "dest": "libvirt/virtproxyd.conf"}
    - {"src": "virtqemud.conf", "dest": "libvirt/virtqemud.conf"}
    - {"src": "qemu.conf.j2", "dest": "libvirt/qemu.conf"}
    - {"src": "virtsecretd.conf", "dest": "libvirt/virtsecretd.conf"}
    - {"src": "auth.conf", "dest": "libvirt/auth.conf", "mode": "0600"}
    - {"src": "sasl_libvirt.conf", "dest": "sasl2/libvirt.conf"}
  notify:
    - Restart libvirt

- name: Configure libvirt sasl credentials
  tags:
    - configure
    - libvirt
  become: true
  block:
    - name: Add libvirt password to sasl db
      ansible.builtin.command:
        cmd: saslpasswd2 -f /etc/libvirt/passwd.db -p -a libvirt -u openstack migration
        stdin: "{{ sasl_password }}"
      changed_when: true
      when: edpm_libvirt_tls_certs_enabled|bool
    - name: Remove libvirt sasl db
      ansible.builtin.file:
        path: /etc/libvirt/passwd.db
        state: absent
      when: not edpm_libvirt_tls_certs_enabled|bool

- name: Create libvirt socket activation drop-in directories
  tags:
    - configure
    - libvirt
  become: true
  vars:
    socket_suffix: ".socket.d"
    socket_types: ['', '-ro', '-admin']
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ item.0 }}{{ item.1 }}{{ socket_suffix }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: not (item.0 == 'virtlogd' and item.1 == '-ro')
  loop: "{{ edpm_libvirt_services | product(socket_types) | list }}"
  notify:
    - Restart libvirt

- name: Render libvirt socket activation drop-in files
  tags:
    - configure
    - libvirt
  become: true
  vars:
    socket_suffix: ".socket.d"
    socket_types: ['', '-ro', '-admin']
  ansible.builtin.template:
    src: "libvirt-socket.unit.j2"
    dest: "/etc/systemd/system/{{ item.0 }}{{ item.1 }}{{ socket_suffix }}/override.conf"
    mode: "0644"
    owner: "root"
    group: "root"
  when: not (item.0 == 'virtlogd' and item.1 == '-ro')
  loop: "{{ edpm_libvirt_services | product(socket_types) | list }}"
  notify:
    - Restart libvirt

- name: Check if /run/libvirt has container_file_t selinux label
  tags:
    - configure
    - libvirt
  ansible.builtin.shell: |
    set -o pipefail
    ls -lRZ /run/libvirt | grep -E ':container_\S+_t'
  register: run_libvirt
  failed_when: run_libvirt.rc not in [0, 1]
  changed_when: false

- name: Restore selinux label for /run/libvirt to virt_var_run_t
  tags:
    - configure
    - libvirt
  become: true
  ansible.builtin.command: "restorecon -R /run/libvirt"
  changed_when: true
  when: run_libvirt.rc == 0

- name: Enable os_enable_vtpm SELinux boolean for vTPM
  tags:
    - configure
    - libvirt
  become: true
  ansible.posix.seboolean:
    name: os_enable_vtpm
    persistent: true
    state: true

- name: Move libvirt TLS files to the right location on the compute node
  tags:
    - configure
    - libvirt
  become: true
  loop:
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.crt", "dest": "/etc/pki/libvirt/servercert.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key", "dest": "/etc/pki/libvirt/private/serverkey.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.crt", "dest": "/etc/pki/libvirt/clientcert.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key", "dest": "/etc/pki/libvirt/private/clientkey.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/ca.crt", "dest": "/etc/pki/CA/cacert.pem"}
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: true
    mode: "0600"
    owner: "root"
    group: "root"
  when: edpm_libvirt_tls_certs_enabled

- name: Move qemu TLS files to the right location on the compute node
  tags:
    - configure
    - libvirt
  become: true
  loop:
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.crt", "dest": "/etc/pki/qemu/server-cert.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key", "dest": "/etc/pki/qemu/server-key.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.crt", "dest": "/etc/pki/qemu/client-cert.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/tls.key", "dest": "/etc/pki/qemu/client-key.pem"}
    - {"src": "{{ edpm_libvirt_tls_cert_src_dir }}/ca.crt", "dest": "/etc/pki/qemu/ca-cert.pem"}
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: true
    mode: "0640"
    owner: "root"
    group: "qemu"
  when: edpm_libvirt_tls_certs_enabled
