---
- name: Verify frr
  gather_facts: false
  hosts: compute-1
  vars:
    test_helper_dir: "../../../../molecule/test-helpers"
  tasks:
    - name: ensure expected directories exist
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_dir.yaml"
      loop:
        - "/var/lib/edpm-config/container-startup-config/frr"
        - "/var/lib/config-data/ansible-generated/frr"
        - "/etc/tmpfiles.d/"
        - "/var/lib/config-data/ansible-generated/frr/etc/frr"

    - name: ensure that /etc/tmpfiles.d/run-frr.conf file for frr exist
      become: true
      block:
        - name: Check if file /etc/tmpfiles.d/run-frr.conf exist
          ansible.builtin.stat:
            path: /etc/tmpfiles.d/run-frr.conf
          register: check_frr_file
        - name: Assert file /etc/tmpfiles.d/run-frr.conf exist
          ansible.builtin.assert:
            that:
              - check_frr_file.stat.exists
            fail_msg: "File /etc/tmpfiles.d/run-frr.conf does not exist"

    - name: ensure that /var/lib/config-data/ansible-generated/frr/etc/frr/frr.conf file exist
      become: true
      block:
        - name: Check if file /var/lib/config-data/ansible-generated/frr/etc/frr/frr.conf exist
          ansible.builtin.stat:
            path: /var/lib/config-data/ansible-generated/frr/etc/frr/frr.conf
          register: check_frr_conf_file
        - name: Assert file /var/lib/config-data/ansible-generated/frr/etc/frr/frr.conf exist
          ansible.builtin.assert:
            that:
              - check_frr_conf_file.stat.exists
            fail_msg: "File /var/lib/config-data/ansible-generated/frr/etc/frr/frr.conf does not exist"

    - name: ensure that /var/lib/config-data/ansible-generated/frr/etc/frr/daemons file exist
      become: true
      block:
        - name: Check if file /var/lib/config-data/ansible-generated/frr/etc/frr/daemons exist
          ansible.builtin.stat:
            path: /var/lib/config-data/ansible-generated/frr/etc/frr/daemons
          register: check_frr_daemons_file
        - name: Assert file /var/lib/config-data/ansible-generated/frr/etc/frr/daemons exist
          ansible.builtin.assert:
            that:
              - check_frr_daemons_file.stat.exists
            fail_msg: "File /var/lib/config-data/ansible-generated/frr/etc/frr/daemons does not exist"

    - name: verify frr BGP and BFD firewall rules are applied
      block:
        - name: rule source file exists
          become: true
          ansible.builtin.stat:
            path: "/var/lib/edpm-config/firewall/frr.yaml"
          register: rule_source_exists

        - name: Assert frr BGP and BFD rule source file exists
          ansible.builtin.assert:
            that:
              - rule_source_exists.stat.exists
            fail_msg: "frr rules source file does not exist"

        - name: Check if nftables rule exists in /etc/nftables/edpm-rules.nft
          become: true
          ansible.builtin.shell: grep -q "{{ item }}" /etc/nftables/edpm-rules.nft
          register: rule_exists
          ignore_errors: true
          with_items:
            - "121 frr bgp port"
            - "122 frr bfd ports"

        - name: Assert nftables rule exists in /etc/nftables/edpm-rules.nft
          ansible.builtin.assert:
            that:
              - item.rc == 0
            fail_msg: "firewall rule {{ item.item }} does not exist in /etc/nftables/edpm-rules.nft"
          with_items: "{{ rule_exists.results }}"

        - name: Check rule content
          become: true
          ansible.builtin.shell: grep -q "{{ item }}" /etc/nftables/edpm-rules.nft
          register: rule_content_exists
          ignore_errors: true
          with_items:
            - "tcp dport { 179 } ct state new counter accept"
            - "udp dport { 3784, 3785, 4784, 49152, 49153 } ct state new counter accept"

        - name: Assert rule content exists
          ansible.builtin.assert:
            that:
              - item.rc == 0
            fail_msg: "rule content {{ item.item }} does not exist in /etc/nftables/edpm-rules.nft"
          with_items: "{{ rule_content_exists.results }}"

        - name: Check input chain rules are loaded
          become: true
          ansible.builtin.shell: nft list table inet filter | awk '/chain EDPM_INPUT {/,/}/' | grep -q "{{ item }}.*accept"
          register: input_rules_loaded
          ignore_errors: true
          with_items:
            - "tcp dport 179 ct state new counter"
            - "udp dport { 3784, 3785, 4784, 49152, 49153 } ct state new counter"

        - name: Assert rule content exists
          ansible.builtin.assert:
            that:
              - item.rc == 0
            fail_msg: "rule {{ item.item }} not loaded"
          with_items: "{{ input_rules_loaded.results }}"

    - name: ensure podman container exists and are running
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_podman.yaml"
      loop:
        - "frr"

    - name: ensure systemd services are defined and functional
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_systemd_unit.yaml"
      loop:
        - {"name": "edpm_frr.service"}
