---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create persistent directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    setype: "{{ item.setype }}"
    state: directory
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - {'path': /var/lib/nova, 'setype': container_file_t}
    - {'path': /var/lib/_nova_secontext, 'setype': container_file_t}
    - {'path': /var/lib/nova/instances, 'setype': container_file_t}
    - {'path': /var/lib/libvirt, 'setype': container_file_t}
    - {'path': /var/log/containers/nova, 'setype': container_file_t, 'mode': '0750'}

- name: Mount Nova NFS Share
  ansible.posix.mount:
    name: /var/lib/nova/instances
    state: mounted
    fstype: nfs4
    src: "{{ edpm_nova_compute_nfs_share }}"
    opts: _netdev,bg,{{ edpm_nova_compute_nfs_options }},nfsvers={{ edpm_nova_compute_nfs_version }}
  when: edpm_nova_compute_nfs_enabled|bool

- name: Set up systemd target for libvirt services
  ansible.builtin.copy:
    dest: /etc/systemd/system/edpm_nova_libvirt.target
    mode: '0644'
    owner: root
    group: root
    content: |
      [Unit]
      Wants=edpm_nova_virtsecretd.service
      Wants=edpm_nova_virtnodedevd.service
      Wants=edpm_nova_virtstoraged.service
      Wants=edpm_nova_virtproxyd.service
      Wants=edpm_nova_virtqemud.service
      After=edpm_nova_virtsecretd.service
      After=edpm_nova_virtnodedevd.service
      After=edpm_nova_virtstoraged.service
      After=edpm_nova_virtproxyd.service
      After=edpm_nova_virtqemud.service
  register: libvirt_target_result

- name: Reload systemd
  ansible.builtin.systemd:
    name: edpm_nova_libvirt.target
    enabled: true
    state: restarted
    daemon_reload: true
  when: libvirt_target_result.changed

- name: Install edpm_nova_libvirt_guests systemd unit file (podman)
  when: edpm_nova_compute_resume_guests_state_on_host_boot|bool
  block:
    - name: Copy libvirt-guests unit to stop nova_compute container before shutdown VMs
      ansible.builtin.copy:
        dest: /etc/systemd/system/edpm_nova_libvirt_guests.service
        mode: 0644
        content: |
          [Unit]
          Description=Suspend libvirt Guests in edpm
          Requires=virt-guest-shutdown.target
          After=systemd-machined.service
          After=network-online.target
          After=edpm_nova_libvirt.target
          Before=edpm_nova_compute.service
          Documentation=man:libvirtd(8)
          Documentation=https://libvirt.org

          [Service]
          EnvironmentFile=-/etc/sysconfig/libvirt-guests
          ExecStart=/bin/podman exec nova_virtproxyd /bin/rm -f /var/lib/libvirt/libvirt-guests
          ExecStop=/bin/podman exec nova_virtproxyd /bin/sh -x /usr/libexec/libvirt-guests.sh shutdown
          Type=oneshot
          RemainAfterExit=yes
          StandardOutput=journal+console
          TimeoutStopSec=0

          [Install]
          WantedBy=multi-user.target

    - name: Making sure virt-guest-shutdown.target is present
      ansible.builtin.copy:
        dest: /etc/systemd/system/virt-guest-shutdown.target
        mode: 0644
        content: |
          [Unit]
          Description=Libvirt guests shutdown
          Documentation=https://libvirt.org

    - name: Enable edpm_nova_libvirt_guests to enable VM shutdown on compute reboot/shutdown
      ansible.builtin.systemd:
        name: edpm_nova_libvirt_guests
        enabled: true
        daemon_reload: true

- name: Ensure ceph configurations exist
  ansible.builtin.file:
    path: "{{ edpm_nova_compute_ceph_config_path }}"
    state: directory
    mode: 0755

- name: Enable virt_sandbox_use_netlink for healthcheck
  ansible.posix.seboolean:
    name: virt_sandbox_use_netlink
    persistent: true
    state: true
  when:
    - ansible_facts.selinux is defined
    - ansible_facts.selinux.status == "enabled"

- name: Install nova-compute delay wrapper script
  ansible.builtin.copy:
    content: delay-nova-compute
    dest: /var/lib/nova/delay-nova-compute
    mode: 0755
  when: edpm_nova_compute_startup_delay|int > 0

- name: Disable irqbalance service on compute
  when: edpm_nova_compute_disable_irq_balance|bool
  ansible.builtin.service:
    name: irqbalance.service
    state: stopped
    enabled: false
